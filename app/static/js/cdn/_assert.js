/* esm.sh - esbuild bundle(@noble/hashes@1.3.3/_assert) es2021 production */
function r(t){if(!Number.isSafeInteger(t)||t<0)throw new Error(`Wrong positive integer: ${t}`)}function i(t){if(typeof t!="boolean")throw new Error(`Expected boolean, not ${t}`)}function f(t){return t instanceof Uint8Array||t!=null&&typeof t=="object"&&t.constructor.name==="Uint8Array"}function n(t,...e){if(!f(t))throw new Error("Expected Uint8Array");if(e.length>0&&!e.includes(t.length))throw new Error(`Expected Uint8Array of length ${e}, not of length=${t.length}`)}function u(t){if(typeof t!="function"||typeof t.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");r(t.outputLen),r(t.blockLen)}function s(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function c(t,e){n(t);let o=e.outputLen;if(t.length<o)throw new Error(`digestInto() expects output buffer of length at least ${o}`)}var a={number:r,bool:i,bytes:n,hash:u,exists:s,output:c},l=a;export{i as bool,n as bytes,l as default,s as exists,u as hash,r as number,c as output};
//# sourceMappingURL=_assert.js.map